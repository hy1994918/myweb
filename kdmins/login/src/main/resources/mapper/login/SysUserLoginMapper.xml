<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kdmins.login.mapper.SysUserLoginMapper">
	<select id="getDepartment" resultType="com.kdmins.login.pojo.department">
		select  t.id, name, createTime, updateTime, pId, status from department t
	</select>
    <select id="getUserInfo" resultType="com.kdmins.login.pojo.UserInfo">
        SELECT
	t.id,
	t.user_name AS userName,
	t.user_password AS userPassword,
	t.user_count AS userCount,
	t.user_qq AS userQQ,
	t.user_sex AS userSex,
	t.user_email AS userEmail,
	t.user_phone AS userPhone
FROM
	userinfo AS t where t.user_count=#{userCount}
    </select>
  <select id="getTopMenu" resultType="com.kdmins.login.pojo.TreeNode">
	  select t2.id, pid, name as "text", remark, target as "href", type, icon
from userinfo t
         inner join groupuser t1 on t.id = t1.user_id
         inner join groupmenu g on t1.group_id = g.group_id
         inner join menutree t2 on g.menu_id = t2.id
 where t2.type=0 and t.user_count=#{userCount}
  </select>
	<select id="getLeftMenu" resultType="com.kdmins.login.pojo.TreeNode">
		select t2.id, pid, name as "text", remark, target as "href", type, icon
from userinfo t
         inner join groupuser t1 on t.id = t1.user_id
         inner join groupmenu g on t1.group_id = g.group_id
         inner join menutree t2 on g.menu_id = t2.id
where  t.user_count=#{userCount} and t2.pid=#{topMenuId} and t2.type=1
	</select>
    <!--<sql id="Base_Column_List">
	ID,
	USER_CODE,
	LOGIN_NAME,
	LOGIN_PSW,
	ERROR_COUNT,
	USER_FLAG
</sql>
    <resultMap id="BaseResultMapApp" type="com.kdmins.login.pojo.App">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="app_name" jdbcType="VARCHAR" property="appName"/>
        <result column="app_remark" jdbcType="VARCHAR" property="appRemark"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.kdmins.login.pojo.SysUserLogin">
        &lt;!&ndash;@mbg.generated&ndash;&gt;
        <result column="ID" jdbcType="INTEGER" property="id"/>
        <result column="USER_CODE" jdbcType="VARCHAR" property="userCode"/>
        <result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName"/>
        <result column="LOGIN_PSW" jdbcType="VARCHAR" property="loginPsw"/>
        <result column="ERROR_COUNT" jdbcType="INTEGER" property="errorCount"/>
        <result column="USER_FLAG" jdbcType="INTEGER" property="userFlag"/>
    </resultMap>
    <select id="getAllApp" resultMap="BaseResultMapApp">
    select  id, app_name, app_remark from app
  </select>
    <select id="getTreeByUser" resultType="java.util.HashMap" parameterType="string">
     select
t.app_id AS "APP_ID",
	t.icon AS "ICON",
	t.href AS "HREF",
	t.app_id AS "APP_ID",
	t.p_id AS "P_ID",
	t.remark AS "REMARK",
	t.id AS "ID",
       t.text as "TEXT"
FROM
	menu_tree t
INNER JOIN groupmenu t1 ON t1.menu_id = t.id
 where t.app_id=#{moduleId} and t1.group_id = #{groupid}

  </select>
    <select id="getGroupInfo" resultType="java.util.Map" parameterType="string">
    SELECT
	t1.group_id as "GROUP_ID",
	t2.mainpage as "MAINPAGE"
FROM
	userinfo t
INNER JOIN user_group t1
INNER JOIN groupinfo t2 ON
	t2.id = t1.group_id ON
	t1.user_id = t.id
WHERE
	t.user_count = #{username}
  </select>
    <insert id="insert" parameterType="com.kdmins.login.pojo.SysUserLogin">
        &lt;!&ndash;@mbg.generated&ndash;&gt;
        insert into SYS_USER_LOGIN (ID, USER_CODE, LOGIN_NAME,
        LOGIN_PSW, ERROR_COUNT, USER_FLAG
        )
        values (#{id,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR},
        #{loginPsw,jdbcType=VARCHAR}, #{errorCount,jdbcType=INTEGER}, #{userFlag,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.kdmins.login.pojo.SysUserLogin">
        &lt;!&ndash;@mbg.generated&ndash;&gt;
        insert into SYS_USER_LOGIN
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userCode != null">
                USER_CODE,
            </if>
            <if test="loginName != null">
                LOGIN_NAME,
            </if>
            <if test="loginPsw != null">
                LOGIN_PSW,
            </if>
            <if test="errorCount != null">
                ERROR_COUNT,
            </if>
            <if test="userFlag != null">
                USER_FLAG,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userCode != null">
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="loginName != null">
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="loginPsw != null">
                #{loginPsw,jdbcType=VARCHAR},
            </if>
            <if test="errorCount != null">
                #{errorCount,jdbcType=INTEGER},
            </if>
            <if test="userFlag != null">
                #{userFlag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    &lt;!&ndash;auto generated by MybatisCodeHelper on 2019-11-15&ndash;&gt;
    <select id="getOneByLoginNameOrUserCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_USER_LOGIN
        where 1=1
        <if test="loginName != null">
            and LOGIN_NAME=#{loginName,jdbcType=VARCHAR}
        </if>
        <if test="userCode != null">
            or USER_CODE=#{userCode,jdbcType=VARCHAR}
        </if>
    </select>

    &lt;!&ndash;auto generated by MybatisCodeHelper on 2019-11-15&ndash;&gt;
    <update id="updateErrorCountByLoginName">
    update SYS_USER_LOGIN
    set ERROR_COUNT=ERROR_COUNT+1
    where LOGIN_NAME=#{loginName,jdbcType=VARCHAR}
  </update>

    &lt;!&ndash;auto generated by MybatisCodeHelper on 2019-11-15&ndash;&gt;
    <update id="updateAllByLoginName">
        update SYS_USER_LOGIN
        <set>
            <if test="updated.id != null">
                ID = #{updated.id,jdbcType=INTEGER},
            </if>
            <if test="updated.userCode != null">
                USER_CODE = #{updated.userCode,jdbcType=VARCHAR},
            </if>
            <if test="updated.loginName != null">
                LOGIN_NAME = #{updated.loginName,jdbcType=VARCHAR},
            </if>
            <if test="updated.loginPsw != null">
                LOGIN_PSW = #{updated.loginPsw,jdbcType=VARCHAR},
            </if>
            <if test="updated.errorCount != null">
                ERROR_COUNT = #{updated.errorCount,jdbcType=INTEGER},
            </if>
            <if test="updated.userFlag != null">
                USER_FLAG = #{updated.userFlag,jdbcType=INTEGER},
            </if>
        </set>
        where LOGIN_NAME=#{loginName,jdbcType=VARCHAR}
    </update>
    <select id="selectGroupByUserCode" parameterType="com.kdmins.login.pojo.SysUserLogin"
            resultType="com.kdmins.login.pojo.userGroupInfo">
       SELECT
	t.group_name as 'groupName',
	t.id as 'groupId',
	t1.user_id as 'userCode'
FROM
	user_group t1
INNER JOIN groupinfo t ON t.id = t1.group_id
WHERE
	user_id = #{id,jdbcType=INTEGER}
   </select>
    <select id="getUserModule" resultType="java.util.Map" parameterType="string">
        SELECT
	t2.id,
	t2.app_name,
	t2.mainTarget,
	t2.icon
FROM
	authority t
INNER JOIN app t2 ON t.menuId = t2.id
WHERE
	t.groupId = #{groupid}
    </select>
    <select id="findAllUser" resultType="java.util.Map">
        SELECT
	t.id,
	t.user_count,
	t.user_email,
	t.user_name,
	t.user_phone,
	t.user_qq,
	t.user_email,
        t.user_sex
FROM
	userinfo t
    </select>
    <select id="getAllUserGroup" resultType="java.util.Map">
        SELECT
	t.group_name AS "group_name",
	t.id AS "id"
FROM
	groupinfo t
    </select>
    <select id="getUserByGroup" resultType="java.util.Map">
        SELECT
	t2.user_count,
	t2.user_name,
	t2.user_password,
	t1.group_name,
	t2.user_password,
	FLOOR(
		DATEDIFF(CURDATE(), t2.user_birth) / 365.2422
	) + 1 AS 'age',
  t2.user_sex,
  t2.user_email,
  t2.user_phone,
  t2.user_qq
FROM
	user_group t
INNER JOIN groupinfo t1 ON t.group_id = t1.id
INNER JOIN userinfo t2 ON t2.id = t.user_id
where t1.id=#{id}
    </select>-->

</mapper>